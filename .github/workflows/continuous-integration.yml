name: Continuous integration
on: pull_request
jobs:
  metadata:
    name: Metadata
    runs-on: ubuntu-latest
    outputs:
      python_headline_version: ${{ steps.list-python-versions.outputs.python_headline_version }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v1

      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: List Python versions
        id: list-python-versions
        run: |
          pip install hdev
          echo "::set-output name=python_headline_version::`hdev python_version --style plain --first`"

  backend:
    name: Backend
    runs-on: ubuntu-latest
    env:
      TOX_PARALLEL_NO_SPINNER: 1

    steps:
    - name: Setup python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ needs.metadata.outputs.python_headline_version }}

    - name: Update pip
      run: python -m pip install --upgrade pip

    - name: Install tox
      run: python -m pip install tox

    - name: Checkout git repo
      uses: actions/checkout@v2

    - name: Cache the .tox dir
      uses: actions/cache@v2
      with:
        path: .tox
        key: ${{ runner.os }}-tox-${{ hashFiles('tox.ini', 'requirements*', 'setup.py', 'setup.cfg') }}
        restore-keys: |
          ${{ runner.os }}-tox-

    - name: Run tox
      run: tox --parallel auto -e checkformatting,lint,tests,coverage,functests

  frontend:
    name: Frontend
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Cache the node_modules dir
      uses: actions/cache@v2
      with:
        path: node_modules
        key: ${{ runner.os }}-node_modules-${{ hashFiles('package-lock.json') }}

    - name: Lint
      run: make frontend-lint

    - name: Test
      run: make frontend-test
